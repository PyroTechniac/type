name: Release Updater

on:
  release:
    types:
      - published

jobs:
  Prebuilds:
    name: Publish Binaries
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node: [14, 16, 18]
        os: [ubuntu-20.04, ubuntu-22.04, macos-11, macos-12, windows-2019, windows-2022]
    steps:
      - name: Checkout Project
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # tag=v3
      - name: Use Node.js v${{ matrix.node }}
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # tag=v3
        with:
          node-version: ${{ matrix.node }}
          cache: yarn
          registry-url: https://registry.yarnpkg.org/
      - name: Install Dependencies
        run: yarn --immutable
      - name: Build and package code
        run: yarn gyp:prebuild
      - name: Store prebuild
        uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # tag=v3
        with:
          name: prebuilt-${{ matrix.os }}-${{ matrix.node }}.tar.gz
          path: build/stage/**/*.tar.gz
          if-no-files-found: error
      - name: Publish Binaries
        uses: icrawl/action-artifact@89adb3b7511ac7d1d6e54e52239c848a701a932f # renovate: tag=v2.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          path: 'build/stage/**/*.tar.gz'

  PrebuildMusl:
    name: Publish Musl Binary
    runs-on: ubuntu-latest
    container:
      image: node:${{ matrix.node }}-alpine
    strategy:
      matrix:
        node: [14, 16, 18]
    steps:
      - name: Setup env with Node v${{ matrix.node }}
        run: |
          apk add --update
          apk add --no-cache ca-certificates git curl build-base python3 g++ make
      - name: Checkout Project
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # tag=v3
      - name: Install Dependencies
        run: yarn --immutable
      - name: Build and package code
        run: yarn gyp:prebuild
      - name: Store prebuild
        uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # tag=v3
        with:
          name: prebuilt-musl-${{ matrix.node }}.tar.gz
          path: build/stage/**/*.tar.gz
          if-no-files-found: error
      - name: Publish Binaries
        uses: icrawl/action-artifact@89adb3b7511ac7d1d6e54e52239c848a701a932f # renovate: tag=v2.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          path: 'build/stage/**/*.tar.gz'

  Crosspost:
    name: Release Crosspost
    runs-on: ubuntu-latest
    steps:
      - name: Parse release name
        id: get_release_name
        run: echo ::set-output name=release_name::${RELEASE:-$TAG}
        env:
          RELEASE: ${{ github.event.release.name }}
          TAG: ${{ github.event.release.tag_name }}

      - name: Send Release Message
        id: crosspost_action
        uses: kludge-cs/gitcord-release-changelogger@5592170408dc081d7cb6a74ce025911bd1fcb7c3 # renovate: tag=v3.0.0
        with:
          webhook-url: ${{ secrets.RELEASE_WEBHOOK }}
          release-body: ${{ github.event.release.body }}
          release-name: ${{ steps.get_release_name.outputs.release_name }}
